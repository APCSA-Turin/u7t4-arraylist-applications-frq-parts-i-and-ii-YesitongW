package com.example.project.Airport;
import java.util.ArrayList;

public class Airport  {
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights) {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights() {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue() {
        double totalRevenue = 0.0;

        for (Flight flight : allFlights) {
            int passengers = flight.getNumPassengers();
            int capacity = flight.getCapacity();
            double pricePerSeat = flight.getPrice();

            if (passengers <= capacity){
                totalRevenue += passengers*pricePerSeat;
               }else {
                totalRevenue += capacity*pricePerSeat;
               }
            }
        return totalRevenue;
    }
    

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights() {
        int removedPassegers = 0;
        for (int i = allFlights.size() - 1; i >= 0; i--) {
            Flight flight = allFlights.get(i);
            int passengers = flight.getNumPassengers();
            int capacity = flight.getCapacity();
            
            if(passengers < capacity * 0.2){
                removedPassegers += passengers;
                allFlights.remove(i);
            }
        }
        return removedPassegers;
        }
    }
